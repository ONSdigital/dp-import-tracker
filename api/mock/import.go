// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"context"
	"github.com/ONSdigital/dp-api-clients-go/importapi"
	"github.com/ONSdigital/dp-healthcheck/healthcheck"
	"github.com/ONSdigital/dp-import-tracker/api"
	"sync"
)

var (
	lockImportAPIClientMockChecker              sync.RWMutex
	lockImportAPIClientMockGetImportJob         sync.RWMutex
	lockImportAPIClientMockUpdateImportJobState sync.RWMutex
)

// Ensure, that ImportAPIClientMock does implement api.ImportAPIClient.
// If this is not the case, regenerate this file with moq.
var _ api.ImportAPIClient = &ImportAPIClientMock{}

// ImportAPIClientMock is a mock implementation of api.ImportAPIClient.
//
//     func TestSomethingThatUsesImportAPIClient(t *testing.T) {
//
//         // make and configure a mocked api.ImportAPIClient
//         mockedImportAPIClient := &ImportAPIClientMock{
//             CheckerFunc: func(ctx context.Context, check *healthcheck.CheckState) error {
// 	               panic("mock out the Checker method")
//             },
//             GetImportJobFunc: func(ctx context.Context, importJobID string, serviceToken string) (importapi.ImportJob, error) {
// 	               panic("mock out the GetImportJob method")
//             },
//             UpdateImportJobStateFunc: func(ctx context.Context, jobID string, serviceToken string, newState string) error {
// 	               panic("mock out the UpdateImportJobState method")
//             },
//         }
//
//         // use mockedImportAPIClient in code that requires api.ImportAPIClient
//         // and then make assertions.
//
//     }
type ImportAPIClientMock struct {
	// CheckerFunc mocks the Checker method.
	CheckerFunc func(ctx context.Context, check *healthcheck.CheckState) error

	// GetImportJobFunc mocks the GetImportJob method.
	GetImportJobFunc func(ctx context.Context, importJobID string, serviceToken string) (importapi.ImportJob, error)

	// UpdateImportJobStateFunc mocks the UpdateImportJobState method.
	UpdateImportJobStateFunc func(ctx context.Context, jobID string, serviceToken string, newState string) error

	// calls tracks calls to the methods.
	calls struct {
		// Checker holds details about calls to the Checker method.
		Checker []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Check is the check argument value.
			Check *healthcheck.CheckState
		}
		// GetImportJob holds details about calls to the GetImportJob method.
		GetImportJob []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// ImportJobID is the importJobID argument value.
			ImportJobID string
			// ServiceToken is the serviceToken argument value.
			ServiceToken string
		}
		// UpdateImportJobState holds details about calls to the UpdateImportJobState method.
		UpdateImportJobState []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// JobID is the jobID argument value.
			JobID string
			// ServiceToken is the serviceToken argument value.
			ServiceToken string
			// NewState is the newState argument value.
			NewState string
		}
	}
}

// Checker calls CheckerFunc.
func (mock *ImportAPIClientMock) Checker(ctx context.Context, check *healthcheck.CheckState) error {
	if mock.CheckerFunc == nil {
		panic("ImportAPIClientMock.CheckerFunc: method is nil but ImportAPIClient.Checker was just called")
	}
	callInfo := struct {
		Ctx   context.Context
		Check *healthcheck.CheckState
	}{
		Ctx:   ctx,
		Check: check,
	}
	lockImportAPIClientMockChecker.Lock()
	mock.calls.Checker = append(mock.calls.Checker, callInfo)
	lockImportAPIClientMockChecker.Unlock()
	return mock.CheckerFunc(ctx, check)
}

// CheckerCalls gets all the calls that were made to Checker.
// Check the length with:
//     len(mockedImportAPIClient.CheckerCalls())
func (mock *ImportAPIClientMock) CheckerCalls() []struct {
	Ctx   context.Context
	Check *healthcheck.CheckState
} {
	var calls []struct {
		Ctx   context.Context
		Check *healthcheck.CheckState
	}
	lockImportAPIClientMockChecker.RLock()
	calls = mock.calls.Checker
	lockImportAPIClientMockChecker.RUnlock()
	return calls
}

// GetImportJob calls GetImportJobFunc.
func (mock *ImportAPIClientMock) GetImportJob(ctx context.Context, importJobID string, serviceToken string) (importapi.ImportJob, error) {
	if mock.GetImportJobFunc == nil {
		panic("ImportAPIClientMock.GetImportJobFunc: method is nil but ImportAPIClient.GetImportJob was just called")
	}
	callInfo := struct {
		Ctx          context.Context
		ImportJobID  string
		ServiceToken string
	}{
		Ctx:          ctx,
		ImportJobID:  importJobID,
		ServiceToken: serviceToken,
	}
	lockImportAPIClientMockGetImportJob.Lock()
	mock.calls.GetImportJob = append(mock.calls.GetImportJob, callInfo)
	lockImportAPIClientMockGetImportJob.Unlock()
	return mock.GetImportJobFunc(ctx, importJobID, serviceToken)
}

// GetImportJobCalls gets all the calls that were made to GetImportJob.
// Check the length with:
//     len(mockedImportAPIClient.GetImportJobCalls())
func (mock *ImportAPIClientMock) GetImportJobCalls() []struct {
	Ctx          context.Context
	ImportJobID  string
	ServiceToken string
} {
	var calls []struct {
		Ctx          context.Context
		ImportJobID  string
		ServiceToken string
	}
	lockImportAPIClientMockGetImportJob.RLock()
	calls = mock.calls.GetImportJob
	lockImportAPIClientMockGetImportJob.RUnlock()
	return calls
}

// UpdateImportJobState calls UpdateImportJobStateFunc.
func (mock *ImportAPIClientMock) UpdateImportJobState(ctx context.Context, jobID string, serviceToken string, newState string) error {
	if mock.UpdateImportJobStateFunc == nil {
		panic("ImportAPIClientMock.UpdateImportJobStateFunc: method is nil but ImportAPIClient.UpdateImportJobState was just called")
	}
	callInfo := struct {
		Ctx          context.Context
		JobID        string
		ServiceToken string
		NewState     string
	}{
		Ctx:          ctx,
		JobID:        jobID,
		ServiceToken: serviceToken,
		NewState:     newState,
	}
	lockImportAPIClientMockUpdateImportJobState.Lock()
	mock.calls.UpdateImportJobState = append(mock.calls.UpdateImportJobState, callInfo)
	lockImportAPIClientMockUpdateImportJobState.Unlock()
	return mock.UpdateImportJobStateFunc(ctx, jobID, serviceToken, newState)
}

// UpdateImportJobStateCalls gets all the calls that were made to UpdateImportJobState.
// Check the length with:
//     len(mockedImportAPIClient.UpdateImportJobStateCalls())
func (mock *ImportAPIClientMock) UpdateImportJobStateCalls() []struct {
	Ctx          context.Context
	JobID        string
	ServiceToken string
	NewState     string
} {
	var calls []struct {
		Ctx          context.Context
		JobID        string
		ServiceToken string
		NewState     string
	}
	lockImportAPIClientMockUpdateImportJobState.RLock()
	calls = mock.calls.UpdateImportJobState
	lockImportAPIClientMockUpdateImportJobState.RUnlock()
	return calls
}
